plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.4'
}

group = 'com.ntnt.highblog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
}

liquibase {
    activities {
        main {
            driver "com.mysql.jdbc.Driver"
            url "jdbc:mysql://localhost:3306/hb_notification"
            username "root"
            password "r00t"
            changeLogFile "src/main/resources/config/liquibase_ext/master.xml"
            referenceUrl "hibernate:spring:com.ert.fasttrade.warehouse.domain?dialect=org.hibernate.dialect.MySQL5InnoDBDialect&amp;hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&amp;hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
            defaultSchemaName "hb_dmm"
            logLevel "debug"
            classpath "src/main/resources/"
        }
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework.boot:spring-boot-starter-reactor-netty"
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-all'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation "org.springframework:spring-messaging"
    implementation "org.springframework.security:spring-security-messaging"
    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    implementation "mysql:mysql-connector-java:${mysql_connector_java_version}"
    implementation "org.liquibase:liquibase-core:${liquid_base_core_version}"
    implementation "org.apache.commons:commons-lang3:${commons_lang3_version}"
    implementation "org.apache.commons:commons-collections4:${commons_collections4_version}"
    implementation "com.paypal.sdk:checkout-sdk:${paypal_checkout_sdk_version}"
    implementation "com.paypal.sdk:payouts-sdk:${paypal_payout_sdk_version}"
    implementation "org.json:json:${org_json_version}"

    liquibaseRuntime "org.liquibase:liquibase-core:${liquid_base_core_version}"
    liquibaseRuntime('org.liquibase:liquibase-groovy-dsl:2.0.1')
    liquibaseRuntime('org.liquibase.ext:liquibase-hibernate5:3.6')
    liquibaseRuntime "mysql:mysql-connector-java:${mysql_connector_java_version}"
    liquibaseRuntime('org.springframework.boot:spring-boot-starter-data-jpa')
    liquibaseRuntime files("/config/liquibase_ext/master.xml")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly "org.mapstruct:mapstruct-processor:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
